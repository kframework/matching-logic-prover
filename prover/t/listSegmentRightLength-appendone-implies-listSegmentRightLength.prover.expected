<prover>
  <goal>
    <id>
      0
    </id>
    <active>
      true
    </active>
    <parent>
      -1
    </parent>
    <k>
      \implies ( \and ( listSegmentRightLength ( variable ( "H" ) { ArrayIntInt } , variable ( "X" ) { Int } , variable ( "Y" ) { Int } , variable ( "FA" ) { SetInt } , variable ( "LA" ) { Int } , .Patterns ) , \equals ( variable ( "F" ) { SetInt } , union ( variable ( "FA" ) { SetInt } , singleton ( variable ( "Y" ) { Int } ) ) ) , disjoint ( variable ( "FA" ) { SetInt } , singleton ( variable ( "Y" ) { Int } ) ) , \equals ( variable ( "Z" ) { Int } , select ( variable ( "H" ) { ArrayIntInt } , variable ( "Y" ) { Int } ) ) , \equals ( variable ( "LENGTH" ) { Int } , plus ( variable ( "LA" ) { Int } , 1 ) ) , gt ( variable ( "Y" ) { Int } , 0 ) , .Patterns ) , \and ( listSegmentRightLength ( variable ( "H" ) { ArrayIntInt } , variable ( "X" ) { Int } , variable ( "Z" ) { Int } , variable ( "F" ) { SetInt } , variable ( "LENGTH" ) { Int } , .Patterns ) , .Patterns ) )
    </k>
    <strategy>
      success
    </strategy>
    <trace>
      .
    </trace>
  </goal>
</prover>
