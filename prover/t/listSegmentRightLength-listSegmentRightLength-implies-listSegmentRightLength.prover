claim \implies( \and( listSegmentRightLength( variable("H") { ArrayIntInt }
                                            , variable("X") { Int } 
                                            , variable("Y") { Int } 
                                            , variable("FA") { SetInt } 
                                            , variable("LA") { Int }
                                            , .Patterns
                                            ) 
                    , listSegmentRightLength( variable("H") { ArrayIntInt } 
                                            , variable("Y") { Int } 
                                            , variable("Z") { Int } 
                                            , variable("FB") { SetInt } 
                                            , variable("LB") { Int }
                                            , .Patterns
                                            )
                    , \equals(variable("F") { SetInt }, union(variable("FA") { SetInt }, variable("FB") { SetInt }))
                    , disjoint(variable("FA") { SetInt }, variable("FB") { SetInt })
                    , \equals(variable("LENGTH") { Int }, plus(variable("LA") { Int }, variable("LB") { Int }))
                    , .Patterns
                    )
              , \and( listSegmentRightLength( variable("H") { ArrayIntInt } 
                                            , variable("X") { Int } 
                                            , variable("Z") { Int } 
                                            , variable("F") { SetInt } 
                                            , variable("LENGTH") { Int }
                                            , .Patterns
                                            )
                   , .Patterns
                   )
              ) 

strategy search-bound(5)

/*
strategy kt # index(1) # useAffectedHeuristic
         ; ( direct-proof
           | ( simplify ; direct-proof )
           | ( right-unfold-Nth(0, 1) ; simplify ; direct-proof ) 
           )
*/
