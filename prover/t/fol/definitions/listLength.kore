symbol listLength(ArrayIntInt, Int, SetInt, Int) : Bool
axiom functional(listLength)

axiom \forall { H { ArrayIntInt }, X { Int }, F { SetInt }, LENGTH { Int } }
      \iff-lfp( listLength(H { ArrayIntInt }, X { Int }, F { SetInt }, LENGTH { Int })
              , \or( \exists { }
                     \and( \equals(X { Int } , 0)
                         , \equals(F { SetInt }, emptyset)
                         , \equals(LENGTH { Int }, 0)
                         )
                   , \exists {  F_I { SetInt } , LENGTH_I { Int } , X_I { Int } }
                     \and( listLength(H { ArrayIntInt },X_I { Int },F_I { SetInt }, LENGTH_I { Int })
                         , gt(X { Int } ,0)
                         , \equals(select(H { ArrayIntInt }, X { Int }) , X_I { Int })
                         , \equals(F { SetInt } , union(F_I { SetInt }, singleton(X { Int } )))
                         , disjoint(F_I { SetInt }, singleton(X { Int } ))
                         , gt(LENGTH { Int }, 0)
                         , \equals(LENGTH_I { Int }, minus(LENGTH { Int }, 1))
                         )
                   )
              )
