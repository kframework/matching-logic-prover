(declare-sort Sll_t)
(declare-sort Record)
(declare-sort Map)
(declare-fun x0 () Sll_t)
(declare-fun x1 () Sll_t)
(declare-fun x2 () Sll_t)
(declare-fun x3 () Sll_t)
(declare-fun x4 () Sll_t)
(declare-fun x5 () Sll_t)
(declare-fun x6 () Sll_t)
(declare-fun x7 () Sll_t)
(declare-fun x8 () Sll_t)
(declare-fun x9 () Sll_t)
(declare-fun x10 () Sll_t)
(declare-fun nil () Sll_t)
(declare-fun next (Sll_t) Record)
(declare-fun total_uni (Record Record) Record)
(declare-fun emp () Map)
(declare-fun total_pto (Sll_t Record) Map)
(declare-fun total_ssep (Map Map) Map)
(declare-fun ls (Sll_t Sll_t) Map)
(declare-fun delta_uni (Record Record) Bool)
(declare-fun delta_pto (Sll_t Record) Bool)
(declare-fun delta_ssep (Map Map) Bool)
(assert (forall ((x Record)) (not (delta_pto nil x))))
(assert (forall ((h1 Map) (h2 Map)) (= (delta_ssep h1 h2) (delta_ssep h2 h1))))
(assert (forall ((h1 Map) (h2 Map)) (=> (or (delta_ssep h1 h2) (delta_ssep h2 h1)) (= (total_ssep h1 h2) (total_ssep h2 h1)))))
(assert (forall ((h1 Map) (h2 Map) (h3 Map)) (= (and (delta_ssep (total_ssep h1 h2) h3) (delta_ssep h1 h2)) (and (delta_ssep h1 (total_ssep h2 h3)) (delta_ssep h2 h3)))))
(assert (forall ((h1 Map) (h2 Map) (h3 Map)) (=> (or (and (delta_ssep (total_ssep h1 h2) h3) (delta_ssep h1 h2)) (and (delta_ssep h1 (total_ssep h2 h3)) (delta_ssep h2 h3))) (= (total_ssep (total_ssep h1 h2) h3) (total_ssep h1 (total_ssep h2 h3))))))
(assert (forall ((h Map)) (delta_ssep h emp)))
(assert (forall ((h Map)) (= h (total_ssep h emp))))
(assert (forall ((x Sll_t) (y Record) (z Record)) (not (and (delta_ssep (total_pto x y) (total_pto x z)) (delta_pto x y) (delta_pto x z)))))
(assert (forall ((x Sll_t) (y Sll_t)) (not (delta_uni (next x) (next y)))))
(assert (forall ((r1 Record) (r2 Record)) (= (delta_uni r1 r2) (delta_uni r2 r1))))
(assert (forall ((r1 Record) (r2 Record)) (=> (or (delta_uni r1 r2) (delta_uni r2 r1)) (= (total_uni r1 r2) (total_uni r2 r1)))))
(assert (forall ((r1 Record) (r2 Record) (r3 Record)) (= (and (delta_uni (total_uni r1 r2) r3) (delta_uni r1 r2)) (and (delta_uni r1 (total_uni r2 r3)) (delta_uni r2 r3)))))
(assert (forall ((r1 Record) (r2 Record) (r3 Record)) (=> (or (and (delta_uni (total_uni r1 r2) r3) (delta_uni r1 r2)) (and (delta_uni r1 (total_uni r2 r3)) (delta_uni r2 r3))) (= (total_uni (total_uni r1 r2) r3) (total_uni r1 (total_uni r2 r3))))))
(assert (forall ((in Sll_t) (out Sll_t) ($53 Map)) (= (= $53 (ls in out)) (or (= in out) (exists ((u Sll_t)) (and (not (= in out)) (delta_ssep (total_pto in (next u)) (ls u out)) (= $53 (total_ssep (total_pto in (next u)) (ls u out))) (delta_pto in (next u))))))))
(assert (not (forall (($66 Map)) (and (delta_ssep (ls x6 x1) (total_ssep (total_pto x4 (next x9)) emp)) (= $66 (total_ssep (ls x6 x1) (total_ssep (total_pto x4 (next x9)) emp))) (delta_ssep (total_pto x4 (next x9)) emp) (delta_pto x4 (next x9))))))
(assert (not (forall (($77 Map)) (and (delta_ssep (ls x2 x7) (total_ssep (total_pto x6 (next x1)) (total_ssep (total_pto x4 (next x9)) (total_ssep (ls x10 x2) emp)))) (= $77 (total_ssep (ls x2 x7) (total_ssep (total_pto x6 (next x1)) (total_ssep (total_pto x4 (next x9)) (total_ssep (ls x10 x2) emp))))) (delta_ssep (total_pto x6 (next x1)) (total_ssep (total_pto x4 (next x9)) (total_ssep (ls x10 x2) emp))) (delta_pto x6 (next x1)) (delta_ssep (total_pto x4 (next x9)) (total_ssep (ls x10 x2) emp)) (delta_pto x4 (next x9)) (delta_ssep (ls x10 x2) emp)))))
(check-sat)

