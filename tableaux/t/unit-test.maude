in "../tableaux.maude" .

set show timing off .

--- Pattern ---
---------------

select MATCHING-LOGIC-PATTERN .

parse \not a .
parse < a > a .
parse < a > X { 0 } .
parse [ a ] a .
parse [ a ] X { 0 } .
parse \and(X { 0 }, \and(Y { 0 }, Z {0}))  .
parse \and(\and(Y { 0 }, Z {0}), Z {0})  .
reduce \and(\and(Y { 0 }, Z {0}), Z {0})  .

--- Not allowed
parse \not \bottom .
parse \not \top .

--- Substitution ---
--------------------

select MATCHING-LOGIC-SUBSTITUTION .

reduce [X := Y {0}] a .

reduce [X := Y {0}] Z {0} .
reduce [X := Y {0}] X {0} .
 
reduce [X := Y{0}] < a > X{0} .
reduce [X := Y{0}] < a > Y{0} .
reduce [X := Y{0}] < a > Z{0} .
reduce [X := Y{0}] [ a ] X{0} .
reduce [X := Y{0}] [ a ] Y{0} .
reduce [X := Y{0}] [ a ] Z{0} .

reduce [X := Y{0}] \and(X{0}, Y{0}) .
reduce [X := Y{0}] \and(Y{0}, X{0}) .
reduce [X := Y{0}] \and(Z{0}, Y{0}) .
reduce [X := Y{0}] \or (X{0}, Y{0}) .
reduce [X := Y{0}] \or (Y{0}, X{0}) .
reduce [X := Y{0}] \or (Z{0}, Y{0}) .

reduce [X := Y{0}] \mu X . X{0} .
reduce [X := Y{0}] \mu X . Y{0} .
reduce [X := Y{0}] \mu Z . X{0} .
reduce [X := Y{0}] \mu Z . Y{0} .
reduce [X := Y{0}] \mu Z . Z{0} .

reduce [X := Y{0}] \nu X . X{0} .
reduce [X := Y{0}] \nu X . Y{0} .
reduce [X := Y{0}] \nu Z . X{0} .
reduce [X := Y{0}] \nu Z . Y{0} .
reduce [X := Y{0}] \nu Z . Z{0} .

--- These aren't handled yet, but should be once we have full ML support
--- parse  [X := Y] < X > a .
--- parse  [X := Y] [ X ] a .

--- Tableaux ---
----------------

select MATCHING-LOGIC-TABLEAUX .

reduce contract(X {0}) .
reduce contract(a) .
reduce contract(\and(X {0}, Y {0})) .

reduce contract(\and( \mu X . \or(b, < a > X {0})
                    , \mu Y . \or(b, < a > Y {0})
                    )
               ) .
reduce contract(\and( \mu X . \or(b, < a > X {0})
                    , \mu Y . \or(b, < c > Y {0})
                    )
               ) .
reduce contract(\and( \mu X . \or(b, < a > X {0})
                    , \mu X . \or(b, < a > X {0})
                    )
               ) .

reduce contract(\mu X . \or(b, \nu Y . < a > Y {0}) ) .
reduce contract(\nu Y . < a > Y {0}) .

reduce contract( \and( \mu X . \or ([ a ] X {0}, \nu Y . \and([ a ] Y {0}, c))
                     , \nu X . \and(< a > X {0}, \mu Y . \or (< a > Y {0}, \not c))
               )     ) .

--- isConsistent 
reduce isConsistent(\and( \mu X . \or([a]X {0}, \nu Y . \and(c, [a]Y{0}))
                        , \nu X . \and( < a > X {0}
                                      , \mu Y . \or(\not c, < a > Y {0})
                                      )
                        )
                   ) .
reduce isConsistent(c, a, \not c) .
reduce isConsistent(c, a) .
reduce isConsistent(\not c, a) .

--- isReduced
reduce isReduced(\not c, < a > u(2){0}, [a]u(0){0}) .
